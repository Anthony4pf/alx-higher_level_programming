The 3-say_my_name module
======================


Using ``say_my_name``
-------------------

Importing the function from the module:
    >>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docstring:
     >>> m = __import__("3-say_my_name").__doc__
     >>> len(m) > 1
     True

Checking for function docstring:
    >>> f = __import__("3-say_my_name").say_my_name.__doc__
    >>> len(f) > 1
    True

Check for passing None as first name:
    >>> say_my_name(None, "Hello")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Check for passing None as last name:
    >>> say_my_name("Lionel", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Check for wrong type as first name:
    >>> say_my_name(1, "Messi")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Check for wrong type as last name:
    >>> say_my_name("Hello", (1,))
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Check for normal usage:
     >>> say_my_name("Anthony", "Ede")
     My name is Anthony Ede
     >>> say_my_name("John", "Wick")
     My name is John Wick

Check for one argument:
    >>> say_my_name("Bob")
    My name is Bob 
 
Check for over two arguments:
     >>> say_my_name("Hello", "Hey", "World")
     Traceback (most recent call last):
     ...
     TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

The 2-matrix-divided module
=================================
   
Using """matrix-divided""":
--------------------------
   
Importing the function from the module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
   
Checking for module docstring:
    >>> m = __import__("2-matrix_divided").__doc__
    >>> len(m) > 1
    True
  
Checking for function docstring:
    >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
    True

Check for regular division with integers:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Check for division by non-number:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "Divisor")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Check for Zero Division:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Check for unequal row lengths:
    >>> matrix = [[1, 2, 3, 4], [5, 6]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Check for passing non-list as matrix:
    >>> matrix = (1, 2, 3)
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for mix of different data types:
    >>> matrix = [[1, (1,), "3"], [4, 5, 6.8]]
    >>> matrix_divided(matrix, 11)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Check for negative divisor:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Check for empty matrix:
    >>> matrix = []
    >>> matrix_divided(matrix, 1)
    []
    >>> matrix
    []

Check for div as bool:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, True)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Check for divisor as float:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Check for no arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Check for only 1 argument:
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Check for more than 2 arguments:
    >>> matrix_divided(matrix, 1, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given
